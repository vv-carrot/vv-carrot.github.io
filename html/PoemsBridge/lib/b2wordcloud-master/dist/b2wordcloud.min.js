! function(t, e) {
  "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.B2wordcloud = e() : t.B2wordcloud = e()
}(this, function() {
  return function(t) {
    function e(o) {
      if (i[o]) return i[o].exports;
      var a = i[o] = {
        exports: {},
        id: o,
        loaded: !1
      };
      return t[o].call(a.exports, a, a.exports, e), a.loaded = !0, a.exports
    }
    var i = {};
    return e.m = t, e.c = i, e.p = "", e(0)
  }([function(t, e, i) {
    "use strict";

    function o(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
    }

    function a(t, e) {
      var i;
      for (i in e) t[i] = t[i] && "[object Object]" === t[i].toString() ? a(t[i], e[i]) : t[i] = e[i];
      return t
    }

    function n(t, e) {
      var i = document.createElement("canvas").getContext("2d");
      i.fillStyle = "#ffffff", i.fillRect(0, 0, 1, 1);
      var o = i.getImageData(0, 0, 1, 1).data,
        a = document.createElement("canvas");
      a.width = e.width, a.height = e.height;
      var n = a.getContext("2d");
      n.drawImage(t, 0, 0, t.width, t.height, 0, 0, a.width, a.height);
      for (var r = n.getImageData(0, 0, e.width, e.height), s = n.createImageData(r), l = 0; l < r.data.length; l += 4) r.data[l + 3] > 128 ? (s.data[l] = o[0], s.data[l + 1] = o[1], s.data[l + 2] = o[2], s.data[l + 3] = o[3]) : (s.data[l] = o[0], s.data[l + 1] = o[1], s.data[l + 2] = o[2], s.data[l + 3] = o[3] ? o[3] - 1 : 0);
      n.putImageData(s, 0, 0), n = e.getContext("2d"), n.drawImage(a, 0, 0), a = n = r = s = i = o = void 0
    }
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    var r = function() {
        function t(t, e) {
          for (var i = 0; i < e.length; i++) {
            var o = e[i];
            o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o)
          }
        }
        return function(e, i, o) {
          return i && t(e.prototype, i), o && t(e, o), e
        }
      }(),
      s = i(1),
      l = e.B2wordcloud = function() {
        function t(e, i) {
          o(this, t), this._wrapper = e, this._wrapper.style.position = "relative", this._container = null, this._tooltip = null, this._options = a({
            renderer: "canvas",
            tooltip: {
              show: !0,
              formatter: null
            },
            clearCanvas: !i.maskImage
          }, i), this._wordcloud2 = null, this._maskCanvas = null, this._shapeCanvas = null, this._tempCanvas = null, this._maskImg = null, this._init()
        }
        return r(t, [{
          key: "_init",
          value: function() {
            this._initContainer(), this._setOptions()
          }
        }, {
          key: "_initContainer",
          value: function() {
            this._maskCanvas = document.createElement("canvas"), this._setCanvasSize(this._maskCanvas), "div" === this._options.renderer ? (this._container = document.createElement("div"), this._container.style.width = "100%", this._container.style.height = "100%", this._createTempCanvas()) : "canvas" === this._options.renderer && (this._container = document.createElement("canvas"), this._setCanvasSize()), this._wrapper.appendChild(this._container)
          }
        }, {
          key: "_createTempCanvas",
          value: function() {
            this._tempCanvas = document.createElement("canvas"), this._setCanvasSize(this._tempCanvas)
          }
        }, {
          key: "_initTooltip",
          value: function() {
            this._tooltip || (this._tooltip = document.createElement("div"), this._tooltip.className = this._options.tooltip.className || "", this._tooltip.style.backgroundColor = this._options.tooltip.backgroundColor || "rgba(0,0,0,0.8)", this._tooltip.style.color = "#fff", this._tooltip.style.padding = "5px", this._tooltip.style.borderRadius = "5px", this._tooltip.style.fontSize = "13px", this._tooltip.style.lineHeight = "1.4", this._tooltip.style.webkitTransition = "left 0.2s, top 0.2s", this._tooltip.style.transition = "left 0.2s, top 0.2s", this._tooltip.style.position = "absolute", this._tooltip.style.whiteSpace = "nowrap", this._tooltip.style.zIndex = "999", this._tooltip.style.display = "none"), document.body.appendChild(this._tooltip)
          }
        }, {
          key: "_setCanvasSize",
          value: function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._container,
              e = this._wrapper.clientWidth,
              i = this._wrapper.clientHeight;
            t.width = e, t.height = i, t.style.width = e + "px", t.style.height = i + "px"
          }
        }, {
          key: "_setOptions",
          value: function() {
            var t = this;
            if (this._fixWeightFactor(this._options), this._options.tooltip.show) {
              this._initTooltip();
              var e = void 0,
                i = void 0,
                o = void 0,
                a = void 0,
                n = this._options.hover,
                r = this._options.mouseout;
              this._options.mouseout = function() {
                r && r(), t._tooltip.style.display = "none"
              }, this._options.hover = function(r, s, l) {
                if (n && n(r, s, l), r) {
                  var h = r[0] + ": " + r[1];
                  "[object Function]" === Object.prototype.toString.call(t._options.tooltip.formatter) && (h = t._options.tooltip.formatter(r)), t._tooltip.style.display = "block", e = t._tooltip.clientWidth, i = t._tooltip.clientHeight, o = i + 15, a = e / 2 + 5, t._tooltip.style.position = "absolute", t._tooltip.style.top = l.pageY - o + "px", t._tooltip.style.left = l.pageX - a + "px", t._tooltip.innerHTML = h
                } else t._tooltip.style.display = "none"
              }
            }
            this._options && this._options.maskImage ? this._maskImage() : this._render()
          }
        }, {
          key: "_maskImage",
          value: function() {
            var t = this,
              e = window.document.createElement("img");
            e.crossOrigin = "Anonymous", e.src = this._options.maskImage, e.onload = function() {
              t._maskImg = e, t._shapeCanvas = document.createElement("canvas"), t._shapeCanvas.width = e.width, t._shapeCanvas.height = e.height;
              var i = t._shapeCanvas.getContext("2d");
              i.drawImage(e, 0, 0, e.width, e.height);
              for (var o = i.getImageData(0, 0, t._shapeCanvas.width, t._shapeCanvas.height), a = i.createImageData(o), n = 0; n < o.data.length; n += 4) {
                var r = o.data[n] + o.data[n + 1] + o.data[n + 2],
                  s = o.data[n + 3];
                s < 128 || r > 384 ? (a.data[n] = a.data[n + 1] = a.data[n + 2] = 255, a.data[n + 3] = 0) : (a.data[n] = a.data[n + 1] = a.data[n + 2] = 0, a.data[n + 3] = 255)
              }
              i.putImageData(a, 0, 0), t._render()
            }
          }
        }, {
          key: "_render",
          value: function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            this._maskImg && n(this._shapeCanvas, this._maskCanvas), this._wordcloud2 = new s("canvas" === this._options.renderer ? this._container : [this._tempCanvas, this._container], this._options, this._maskCanvas, t)
          }
        }, {
          key: "_fixWeightFactor",
          value: function(t) {
            if (t.maxFontSize = "number" == typeof t.maxFontSize ? t.maxFontSize : 36, t.minFontSize = "number" == typeof t.minFontSize ? t.minFontSize : 6, t.list && t.list.length > 0) {
              for (var e = Number(t.list[0][1]), i = 0, o = 0, a = t.list.length; o < a; o++) {
                var n = Number(t.list[o][1]);
                e > n && (e = n), i < n && (i = n)
              }
              i > e ? t.weightFactor = function(o) {
                var a = i - e,
                  n = t.maxFontSize - t.minFontSize;
                return 0 === a ? 0 === n ? t.minFontSize : (t.minFontSize + t.maxFontSize) / 2 : o === e ? t.minFontSize : o === i ? t.maxFontSize : (o - e) / a * n + t.minFontSize
              } : t.weightFactor = function(e) {
                return t.minFontSize
              }
            }
          }
        }, {
          key: "resize",
          value: function() {
            "canvas" === this._options.renderer ? this._setCanvasSize() : "div" === this._options.renderer && (this._container.textContent = ""), this._maskCanvas && this._setCanvasSize(this._maskCanvas), this._render()
          }
        }, {
          key: "dispatchAction",
          value: function(t) {
            switch (t.type) {
              case "highlight":
                this._wordcloud2.highlight(t.dataIndex, t.keepAlive);
                break;
              case "downplay":
                this._wordcloud2.downplay(t.dataIndex, t.keepAlive)
            }
          }
        }]), t
      }();
    t.exports = l
  }, function(t, e, i) {
    function o(t, e, i) {
      return e in t ? Object.defineProperty(t, e, {
        value: i,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : t[e] = i, t
    }
    var a, n;
    (function() {
      /*!
       * wordcloud2.js
       * http://timdream.org/wordcloud2.js/
       *
       * Copyright 2011 - 2013 Tim Chien
       * Released under the MIT license
       */
      "use strict";
      window.setImmediate || (window.setImmediate = function() {
          return window.msSetImmediate || window.webkitSetImmediate || window.mozSetImmediate || window.oSetImmediate || function() {
            if (!window.postMessage || !window.addEventListener) return null;
            var t = [void 0],
              e = "zero-timeout-message",
              i = function(i) {
                var o = t.length;
                return t.push(i), window.postMessage(e + o.toString(36), "*"), o
              };
            return window.addEventListener("message", function(i) {
              if ("string" == typeof i.data && i.data.substr(0, e.length) === e) {
                i.stopImmediatePropagation();
                var o = parseInt(i.data.substr(e.length), 36);
                t[o] && (t[o](), t[o] = void 0)
              }
            }, !0), window.clearImmediate = function(e) {
              t[e] && (t[e] = void 0)
            }, i
          }() || function(t) {
            window.setTimeout(t, 0)
          }
        }()), window.clearImmediate || (window.clearImmediate = function() {
          return window.msClearImmediate || window.webkitClearImmediate || window.mozClearImmediate || window.oClearImmediate || function(t) {
            window.clearTimeout(t)
          }
        }()),
        function(i) {
          var r = function() {
              var t = document.createElement("canvas");
              if (!t || !t.getContext) return !1;
              var e = t.getContext("2d");
              return !!e && (!!e.getImageData && (!!e.fillText && (!!Array.prototype.some && !!Array.prototype.push)))
            }(),
            s = function() {
              if (r) {
                for (var t, e, i = document.createElement("canvas").getContext("2d"), o = 20; o;) {
                  if (i.font = o.toString(10) + "px sans-serif", i.measureText("Ｗ").width === t && i.measureText("m").width === e) return o + 1;
                  t = i.measureText("Ｗ").width, e = i.measureText("m").width, o--
                }
                return 0
              }
            }(),
            l = function(t) {
              for (var e, i, o = t.length; o; e = Math.floor(Math.random() * o), i = t[--o], t[o] = t[e], t[e] = i);
              return t
            },
            h = function(t, e, i) {
              function a(t, e) {
                return "hsl(" + (360 * Math.random()).toFixed() + "," + (30 * Math.random() + 70).toFixed() + "%," + (Math.random() * (e - t) + t).toFixed() + "%)"
              }
              if (r) {
                Array.isArray(t) || (t = [t]);
                var n = function(t) {
                    var e = t.backingStorePixelRatio || t.webkitBackingStorePixelRatio || t.mozBackingStorePixelRatio || t.msBackingStorePixelRatio || t.oBackingStorePixelRatio || t.backingStorePixelRatio || 1;
                    return (window.devicePixelRatio || 1) / e
                  },
                  h = null,
                  c = 1;
                t.forEach(function(e, i) {
                  if (e.getContext && e.getContext("2d") && (h = e, c = n(e.getContext("2d"))), "string" == typeof e) {
                    if (t[i] = document.getElementById(e), !t[i]) throw "The element id specified is not found."
                  } else if (!e.tagName && !e.appendChild) throw "You must pass valid HTML elements, or ID of the element."
                });
                var d = {
                    list: [],
                    fontFamily: '"Trebuchet MS", "Heiti TC", "微軟正黑體", "Arial Unicode MS", "Droid Fallback Sans", sans-serif',
                    fontWeight: "normal",
                    color: "random-dark",
                    minSize: 0,
                    weightFactor: 1,
                    clearCanvas: !0,
                    backgroundColor: "#fff",
                    gridSize: 8,
                    drawOutOfBound: !1,
                    origin: null,
                    drawMask: !1,
                    maskColor: "rgba(255,0,0,0.3)",
                    maskGapWidth: .3,
                    wait: 0,
                    abortThreshold: 0,
                    abort: function() {},
                    minRotation: -Math.PI / 2,
                    maxRotation: Math.PI / 2,
                    rotationSteps: 0,
                    shuffle: !0,
                    rotateRatio: .1,
                    shape: "circle",
                    ellipticity: .65,
                    classes: null,
                    hover: null,
                    click: null,
                    cursorWhenHover: "pointer",
                    mouseout: null
                  },
                  f = this;
                if (f.words = [], f.elements = t, e)
                  for (var u in e) u in d && (d[u] = e[u]);
                if ("function" != typeof d.weightFactor) {
                  var m = d.weightFactor;
                  d.weightFactor = function(t) {
                    return t * m
                  }
                }
                if ("function" != typeof d.shape) switch (d.shape) {
                  case "circle":
                  default:
                    d.shape = "circle";
                    break;
                  case "cardioid":
                    d.shape = function(t) {
                      return 1 - Math.sin(t)
                    };
                    break;
                  case "diamond":
                    d.shape = function(t) {
                      var e = t % (2 * Math.PI / 4);
                      return 1 / (Math.cos(e) + Math.sin(e))
                    };
                    break;
                  case "square":
                    d.shape = function(t) {
                      return Math.min(1 / Math.abs(Math.cos(t)), 1 / Math.abs(Math.sin(t)))
                    };
                    break;
                  case "triangle-forward":
                    d.shape = function(t) {
                      var e = t % (2 * Math.PI / 3);
                      return 1 / (Math.cos(e) + Math.sqrt(3) * Math.sin(e))
                    };
                    break;
                  case "triangle":
                  case "triangle-upright":
                    d.shape = function(t) {
                      var e = (t + 3 * Math.PI / 2) % (2 * Math.PI / 3);
                      return 1 / (Math.cos(e) + Math.sqrt(3) * Math.sin(e))
                    };
                    break;
                  case "pentagon":
                    d.shape = function(t) {
                      var e = (t + .955) % (2 * Math.PI / 5);
                      return 1 / (Math.cos(e) + .726543 * Math.sin(e))
                    };
                    break;
                  case "star":
                    d.shape = function(t) {
                      var e = (t + .955) % (2 * Math.PI / 10);
                      return (t + .955) % (2 * Math.PI / 5) - 2 * Math.PI / 10 >= 0 ? 1 / (Math.cos(2 * Math.PI / 10 - e) + 3.07768 * Math.sin(2 * Math.PI / 10 - e)) : 1 / (Math.cos(e) + 3.07768 * Math.sin(e))
                    }
                }
                d.gridSize = Math.max(Math.floor(d.gridSize), 4);
                var p, g, v, w, x, b, y, _ = d.gridSize,
                  C = _ - d.maskGapWidth,
                  k = Math.abs(d.maxRotation - d.minRotation),
                  M = Math.abs(Math.floor(d.rotationSteps)),
                  S = Math.min(d.maxRotation, d.minRotation);
                switch (d.color) {
                  case "random-dark":
                    y = function() {
                      return a(10, 50)
                    };
                    break;
                  case "random-light":
                    y = function() {
                      return a(50, 90)
                    };
                    break;
                  default:
                    "function" == typeof d.color && (y = d.color)
                }
                var I;
                "function" == typeof d.fontWeight && (I = d.fontWeight);
                var T = null;
                "function" == typeof d.classes && (T = d.classes);
                var E, O = !1,
                  F = [],
                  z = function(t) {
                    var e, i, o = t.currentTarget,
                      a = o.getBoundingClientRect();
                    t.touches ? (e = t.touches[0].clientX, i = t.touches[0].clientY) : (e = t.clientX, i = t.clientY);
                    var n = e - a.left,
                      r = i - a.top,
                      s = Math.floor(n * (o.width / a.width / c || 1) / _),
                      l = Math.floor(r * (o.height / a.height / c || 1) / _);
                    return F[s][l]
                  },
                  R = function() {
                    d.mouseout()
                  },
                  P = function(t) {
                    var e = z(t);
                    if (E !== e) {
                      if (E = e, !e) return d.hover(void 0, void 0, t), void(t.target.style.cursor = "default");
                      "pointer" === d.cursorWhenHover && (t.target.style.cursor = "pointer"), d.hover(e.item, e.dimension, t)
                    }
                  },
                  j = function(t) {
                    var e = z(t);
                    e && (d.click(e.item, e.dimension, t, e.index), t.preventDefault())
                  },
                  L = [],
                  A = function(t) {
                    if (L[t]) return L[t];
                    var e = 8 * t,
                      i = e,
                      o = [];
                    for (0 === t && o.push([w[0], w[1], 0]); i--;) {
                      var a = 1;
                      "circle" !== d.shape && (a = d.shape(i / e * 2 * Math.PI)), o.push([w[0] + t * a * Math.cos(-i / e * 2 * Math.PI), w[1] + t * a * Math.sin(-i / e * 2 * Math.PI) * d.ellipticity, i / e * 2 * Math.PI])
                    }
                    return L[t] = o, o
                  },
                  B = function() {
                    return d.abortThreshold > 0 && (new Date).getTime() - b > d.abortThreshold
                  },
                  D = function() {
                    return 0 === d.rotateRatio ? 0 : Math.random() > d.rotateRatio ? 0 : 0 === k ? S : M > 0 ? S + Math.floor(Math.random() * M) * k / (M - 1) : S + Math.random() * k
                  },
                  W = function(t, e, i) {
                    var o = !1,
                      a = d.weightFactor(e);
                    if (a <= d.minSize) return !1;
                    var n = 1;
                    a < s && (n = function() {
                      for (var t = 2; t * a < s;) t += 2;
                      return t
                    }());
                    var r;
                    r = I ? I(t, e, a) : d.fontWeight;
                    var l = document.createElement("canvas"),
                      h = l.getContext("2d", {
                        willReadFrequently: !0
                      });
                    h.font = r + " " + (a * n).toString(10) + "px " + d.fontFamily;
                    var c = h.measureText(t).width / n,
                      f = Math.max(a * n, h.measureText("m").width, h.measureText("Ｗ").width) / n,
                      u = c + 2 * f,
                      m = 3 * f,
                      p = Math.ceil(u / _),
                      g = Math.ceil(m / _);
                    u = p * _, m = g * _;
                    var v = -c / 2,
                      w = .4 * -f,
                      x = Math.ceil((u * Math.abs(Math.sin(i)) + m * Math.abs(Math.cos(i))) / _),
                      b = Math.ceil((u * Math.abs(Math.cos(i)) + m * Math.abs(Math.sin(i))) / _),
                      y = b * _,
                      C = x * _;
                    l.setAttribute("width", y), l.setAttribute("height", C), o && (document.body.appendChild(l), h.save()), h.scale(1 / n, 1 / n), h.translate(y * n / 2, C * n / 2), h.rotate(-i), h.font = r + " " + (a * n).toString(10) + "px " + d.fontFamily, h.fillStyle = "#000", h.textBaseline = "middle", h.fillText(t, v * n, (w + .5 * a) * n);
                    var k = h.getImageData(0, 0, y, C).data;
                    if (B()) return !1;
                    o && (h.strokeRect(v * n, w, c * n, f * n), h.restore());
                    for (var M, S, T, E = [], O = b, F = [x / 2, b / 2, x / 2, b / 2]; O--;)
                      for (M = x; M--;) {
                        T = _;
                        t: {
                          for (; T--;)
                            for (S = _; S--;)
                              if (k[4 * ((M * _ + T) * y + (O * _ + S)) + 3]) {
                                E.push([O, M]), O < F[3] && (F[3] = O), O > F[1] && (F[1] = O), M < F[0] && (F[0] = M), M > F[2] && (F[2] = M), o && (h.fillStyle = "rgba(255, 0, 0, 0.5)", h.fillRect(O * _, M * _, _ - .5, _ - .5));
                                break t
                              } o && (h.fillStyle = "rgba(0, 0, 255, 0.5)", h.fillRect(O * _, M * _, _ - .5, _ - .5))
                        }
                      }
                    return o && (h.fillStyle = "rgba(0, 255, 0, 0.5)", h.fillRect(F[3] * _, F[0] * _, (F[1] - F[3] + 1) * _, (F[2] - F[0] + 1) * _)), {
                      mu: n,
                      occupied: E,
                      bounds: F,
                      gw: b,
                      gh: x,
                      fillTextOffsetX: v,
                      fillTextOffsetY: w,
                      fillTextWidth: c,
                      fillTextHeight: f,
                      fontSize: a
                    }
                  },
                  H = function(t, e, i, o, a) {
                    for (var n = a.length; n--;) {
                      var r = t + a[n][0],
                        s = e + a[n][1];
                      if (r >= g || s >= v || r < 0 || s < 0) {
                        if (!d.drawOutOfBound) return !1
                      } else if (!p[r][s]) return !1
                    }
                    return !0
                  };
                f.drawItem = function(t, e) {
                  t && (N(t.gx, t.gy, t.info, t.word, t.weight, t.distance, t.theta, t.rotateDeg, t.attributes, t.i, t.highlight), G(t.gx, t.gy, t.gw, t.gh, t.info, t.item, t.i))
                };
                var X = function(t, e, i, o, a, n, r, s) {
                    t.beginPath(0), t.save(), t.moveTo(e + n, i), t.lineTo(e + o - n, i), t.arcTo(e + o, i, e + o, i + n, n), t.lineTo(e + o, i + a - n), t.arcTo(e + o, i + a, e + o - n, i + a, n), t.lineTo(e + n, i + a), t.arcTo(e, i + a, e, i + a - n, n), t.lineTo(e, i + n), t.arcTo(e, i, e + n, i, n), t.closePath(), t.fillStyle = r, t.fill(), t.lineWidth = "1", t.strokeStyle = s, t.stroke(), t.restore()
                  },
                  Y = function(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                      i = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/,
                      o = t.toLowerCase();
                    if (o && i.test(o)) {
                      if (4 === o.length) {
                        for (var a = "#", n = 1; n < 4; n += 1) a += o.slice(n, n + 1).concat(o.slice(n, n + 1));
                        o = a
                      }
                      for (var r = [], s = 1; s < 7; s += 2) r.push(parseInt("0x" + o.slice(s, s + 2)));
                      return "rgba(" + r.join(",") + "," + e + ")"
                    }
                    return o.startsWith("rgba") ? o.split(",").map(function(t, e) {
                      return 3 === e && (t = " 0.2)"), t
                    }).join(",") : o
                  },
                  N = function(i, a, n, r, s, l, h, c, f, u, m) {
                    var p, g = n.fontSize;
                    p = y ? y(r, s, g, l, h) : d.color;
                    var v;
                    v = I ? I(r, s, g) : d.fontWeight;
                    var w;
                    w = T ? T(r, s, g) : d.classes;
                    var x, b = n.bounds;
                    x = {
                      x: (i + b[3]) * _,
                      y: (a + b[0]) * _,
                      w: (b[1] - b[3] + 1) * _,
                      h: (b[2] - b[0] + 1) * _
                    };
                    var C, k, M, S = !1,
                      E = "left";
                    "[object Array]" === Object.prototype.toString.call(p) && (C = p[u % p.length], p = C, "[object Array]" === Object.prototype.toString.call(C) && (S = !0), S && "[object Number]" !== Object.prototype.toString.call(C[C.length - 1]) && (C[C.length] = 0), E = 0 === C[C.length - 1] ? "top" : "left"), M = JSON.parse(JSON.stringify(p)), t.forEach(function(t, s) {
                      if (t.getContext) {
                        var l = t.getContext("2d"),
                          h = n.mu;
                        if (l.save(), l.scale(1 / h, 1 / h), l.font = v + " " + (g * h).toString(10) + "px " + d.fontFamily, S) {
                          var u = l.measureText(r).width;
                          k = l.createLinearGradient("top" !== E ? -u / 2 : 0, "top" === E ? -g / 2 : 0, "top" !== E ? u / 2 : 0, "top" === E ? g / 2 : 0);
                          for (var s = 0; s < C.length - 1; s++) k.addColorStop(s / (C.length - 2), C[s]);
                          p = k
                        }
                        if (l.fillStyle = p, l.translate((i + n.gw / 2) * _ * h, (a + n.gh / 2) * _ * h), m) {
                          var x;
                          if (S) {
                            x = l.createLinearGradient("top" !== E ? -n.fillTextOffsetX * h - 4 / h / 2 : 0, "top" === E ? -n.fillTextOffsetY * h - 4 / h / 2 : 0, "top" !== E ? n.fillTextOffsetX * h - 4 / h / 2 : 0, "top" === E ? n.fillTextOffsetY * h - 4 / h / 2 : 0);
                            for (var s = 0; s < C.length - 1; s++) x.addColorStop(s / (C.length - 2), Y(C[C.length - 2 - s], .2))
                          }
                          X(l, n.fillTextOffsetX * h - 2 / h, n.fillTextOffsetY * h - 2 / h, l.measureText(r).width + 4 / h, g + 4 / h, 4 / h, S ? x : Y(C ? C : p, .2), S ? C[0] : C ? C : p)
                        }
                        l.shadowColor = e.shadowColor, l.shadowOffsetX = e.shadowOffsetX, l.shadowOffsetY = e.shadowOffsetY, l.shadowBlur = e.shadowBlur, 0 !== c && l.rotate(-c), l.textBaseline = "middle", l.fillText(r, n.fillTextOffsetX * h, (n.fillTextOffsetY + .5 * g) * h), l.restore()
                      } else {
                        S && (p = C);
                        var b = document.createElement("div"),
                          y = document.createElement("span"),
                          M = "";
                        M = "rotate(" + -c / Math.PI * 180 + "deg) ", 1 !== n.mu && (M += "translateX(-" + n.fillTextWidth / 4 + "px) scale(" + 1 / n.mu + ")");
                        var I = o({
                            position: "absolute",
                            display: "block",
                            font: v + " " + g * n.mu + "px " + d.fontFamily,
                            left: (i + n.gw / 2) * _ + n.fillTextOffsetX + "px",
                            top: (a + n.gh / 2) * _ + n.fillTextOffsetY + "px",
                            width: n.fillTextWidth + "px",
                            "box-sizing": "border-box",
                            "border-radius": "4px",
                            "border-style": "solid",
                            "border-width": "1px",
                            "border-color": "transparent",
                            lineHeight: g + "px",
                            whiteSpace: "nowrap",
                            transform: M,
                            webkitTransform: M,
                            msTransform: M,
                            transformOrigin: "50% 40%",
                            webkitTransformOrigin: "50% 40%",
                            msTransformOrigin: "50% 40%"
                          }, "font", v + " " + g * n.mu + "px " + d.fontFamily),
                          T = {
                            display: "block",
                            font: v + " " + g * n.mu + "px " + d.fontFamily,
                            filter: "drop-shadow(" + e.shadowOffsetX + "px " + e.shadowOffsetY + "px " + e.shadowBlur + "px " + e.shadowColor + ")"
                          };
                        m && (I = Object.assign(I, o({
                          "border-color": S ? p[0] : p,
                          "border-style": "solid",
                          "border-width": "1px"
                        }, "border-color", S ? p[0] : p)), S ? I.backgroundImage = "-webkit-linear-gradient(" + E + "," + p.filter(function(t, e) {
                          return e != p.length - 1
                        }).map(function(t) {
                          return Y(t, .2)
                        }).join(",") + ")" : I.backgroundColor = Y(p, .2)), p && ("[object Array]" === Object.prototype.toString.call(p) && (T = Object.assign({
                          webkitBackgroundClip: "text",
                          webkitTextFillColor: "transparent",
                          backgroundImage: "-webkit-linear-gradient(" + E + "," + p.filter(function(t, e) {
                            return e != p.length - 1
                          }).join(",") + ")"
                        }, T)), T.color = p), y.textContent = r;
                        for (var O in I) b.style[O] = I[O];
                        for (var O in T) y.style[O] = T[O];
                        if (f)
                          for (var F in f) y.setAttribute(F, f[F]);
                        w && (y.className += w), b.appendChild(y), t.appendChild(b)
                      }
                    })
                  },
                  q = function(e, i, o, a, n, r) {
                    if (!(e >= g || i >= v || e < 0 || i < 0)) {
                      if (p[e][i] = !1, o) {
                        var s = t[0].getContext("2d");
                        s.fillRect(e * _, i * _, C, C)
                      }
                      O && (F[e][i] = {
                        item: n,
                        dimension: a,
                        index: r
                      })
                    }
                  },
                  G = function(e, i, o, a, n, r, s) {
                    var l, h = n.occupied,
                      c = d.drawMask;
                    c && (l = t[0].getContext("2d"), l.save(), l.fillStyle = d.maskColor);
                    var f;
                    if (O) {
                      var u = n.bounds;
                      f = {
                        x: (e + u[3]) * _,
                        y: (i + u[0]) * _,
                        w: (u[1] - u[3] + 1) * _,
                        h: (u[2] - u[0] + 1) * _
                      }
                    }
                    for (var m = h.length; m--;) {
                      var p = e + h[m][0],
                        w = i + h[m][1];
                      p >= g || w >= v || p < 0 || w < 0 || q(p, w, c, f, r, s)
                    }
                    c && l.restore()
                  },
                  J = function(t, e) {
                    var i, o, a, n, r = e;
                    Array.isArray(t) ? (i = t[0], o = t[1], n = t[2]) : (i = t.word, o = t.weight, a = t.attributes, n = t.highlight);
                    var s = D(),
                      h = W(i, o, s);
                    if (!h) return !1;
                    if (B()) return !1;
                    if (!d.drawOutOfBound) {
                      var c = h.bounds;
                      if (c[1] - c[3] + 1 > g || c[2] - c[0] + 1 > v) return !1
                    }
                    for (var u = x + 1, m = function(e, r) {
                        var l = Math.floor(e[0] - h.gw / 2),
                          c = Math.floor(e[1] - h.gh / 2),
                          d = h.gw,
                          m = h.gh;
                        if (!H(l, c, d, m, h.occupied)) return !1;
                        var p = {
                          gx: l,
                          gy: c,
                          info: h,
                          word: i,
                          weight: o,
                          distance: x - u,
                          theta: e[2],
                          attributes: a,
                          item: t,
                          i: r,
                          highlight: n,
                          rotateDeg: s
                        };
                        return f.words.push(p), p
                      }; u--;) {
                      var p = A(x - u);
                      d.shuffle && (p = [].concat(p), l(p));
                      for (var w, e = 0; e < p.length; e++) {
                        var b = m(p[e], r);
                        if (b) {
                          w = b;
                          break
                        }
                      }
                      if (w) return w
                    }
                    return !1
                  },
                  U = function(e, i, o) {
                    return i ? !t.some(function(t) {
                      var a = document.createEvent("CustomEvent");
                      return a.initCustomEvent(e, !0, i, o || {}), !t.dispatchEvent(a)
                    }, this) : void t.forEach(function(t) {
                      var a = document.createEvent("CustomEvent");
                      a.initCustomEvent(e, !0, i, o || {}), t.dispatchEvent(a)
                    }, this)
                  },
                  $ = function() {
                    var e = i;
                    if (e.getContext) g = Math.ceil(e.width / _), v = Math.ceil(e.height / _);
                    else {
                      var o = e.getBoundingClientRect();
                      g = Math.ceil(o.width / _), v = Math.ceil(o.height / _)
                    }
                    if (U("wordcloudstart", !0)) {
                      w = d.origin ? [d.origin[0] / _, d.origin[1] / _] : [g / 2, v / 2], x = Math.floor(Math.sqrt(g * g + v * v)), p = [];
                      var a, r, s;
                      if (t.forEach(function(t) {
                          if (t.style.backgroundColor = d.backgroundColor, t.getContext) {
                            var e = t.getContext("2d");
                            e.fillStyle = d.backgroundColor, e.clearRect(0, 0, g * (_ + 1), v * (_ + 1)), e.fillRect(0, 0, g * (_ + 1), v * (_ + 1))
                          } else t.textContent = "", t.style.position = "relative"
                        }), !e.getContext || d.clearCanvas)
                        for (a = g; a--;)
                          for (p[a] = [], r = v; r--;) p[a][r] = !0;
                      else {
                        var l = document.createElement("canvas").getContext("2d");
                        l.fillStyle = "#ffffff", l.fillRect(0, 0, 1, 1);
                        var c = l.getImageData(0, 0, 1, 1).data,
                          u = e.getContext("2d").getImageData(0, 0, g * _, v * _).data;
                        a = g;
                        for (var m, y; a--;)
                          for (p[a] = [], r = v; r--;) {
                            y = _;
                            t: for (; y--;)
                              for (m = _; m--;)
                                for (s = 4; s--;)
                                  if (u[4 * ((r * _ + y) * g * _ + (a * _ + m)) + s] !== c[s]) {
                                    p[a][r] = !1;
                                    break t
                                  } p[a][r] !== !1 && (p[a][r] = !0)
                          }
                        u = l = c = void 0
                      }
                      if (d.hover || d.click) {
                        for (O = !0, a = g + 1; a--;) F[a] = [];
                        var C = function(t) {
                          t.preventDefault()
                        };
                        t.forEach(function(t) {
                          d.hover && (t.addEventListener("mousemove", P), t.addEventListener("mouseout", R)), d.click && (t.addEventListener("click", j), t.addEventListener("touchstart", j), t.addEventListener("touchend", C), t.style.webkitTapHighlightColor = "rgba(0, 0, 0, 0)"), t.addEventListener("wordcloudstart", function e() {
                            t.removeEventListener("wordcloudstart", e), t.removeEventListener("mousemove", P), t.removeEventListener("mouseout", R), t.removeEventListener("click", j), t.removeEventListener("touchstart", j), t.removeEventListener("touchend", C), E = void 0
                          })
                        })
                      }
                      s = 0;
                      var k, M;
                      0 !== d.wait ? (k = window.setTimeout, M = window.clearTimeout) : (k = window.setImmediate, M = window.clearImmediate);
                      var S = function(e, i) {
                          t.forEach(function(t) {
                            t.addEventListener(e, i)
                          }, this)
                        },
                        I = function(e, i) {
                          t.forEach(function(t) {
                            t.removeEventListener(e, i)
                          }, this)
                        },
                        T = function t() {
                          I("wordcloudstart", t), M(z)
                        };
                      S("wordcloudstart", T);
                      var z = k(function t() {
                        if (s >= d.list.length) return M(z), U("wordcloudstop", !1), void I("wordcloudstart", T);
                        b = (new Date).getTime();
                        var e = J(d.list[s], s);
                        f.drawItem(e);
                        var i = !U("wordclouddrawn", !0, {
                          item: d.list[s],
                          drawn: e && !0
                        });
                        return B() || i ? (M(z), d.abort(), U("wordcloudabort", !1), U("wordcloudstop", !1), void I("wordcloudstart", T)) : (s++, void(z = k(t, d.wait)))
                      }, d.wait);
                      if (h) {
                        var L = h.getContext("2d"),
                          A = n(L);
                        h.width = h.width * A, h.height = h.height * A, L.scale(A, A)
                      }
                    }
                  };
                return $(), this
              }
            };
          h.prototype.highlight = function(t, e) {
            var i = this;
            i.elements.forEach(function(o, a) {
              o.getContext ? o.getContext("2d").clearRect(0, 0, o.width, o.height) : o.innerHTML = "", i.words.forEach(function(o) {
                e || (o.highlight = !1), o.i === t && (o.highlight = !0), i.drawItem(o)
              })
            })
          }, h.prototype.downplay = function(t, e) {
            var i = this;
            i.elements.forEach(function(e, o) {
              e.getContext ? e.getContext("2d").clearRect(0, 0, e.width, e.height) : e.innerHTML = "", i.words.forEach(function(e) {
                e.i === t && (e.highlight = !1), i.drawItem(e)
              })
            })
          }, h.isSupported = r, h.minFontSize = s, i.WordCloud = h, a = [], n = function() {
            return h
          }.apply(e, a), !(void 0 !== n && (t.exports = n))
        }(this)
    }).call(window)
  }])
});
